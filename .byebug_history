(0..4).map {|i| table_x_start + (i * avg_column_size) }
avg_row_size = (table_y_end - table_y_start) / 5
avg_column_size = (table_x_end - table_x_start) / 5
table_y_end
exit
y_column_x_starts = date_boxes.select{|box| (y_start..(y_start+2)).include?(box[:y_start])}.map{|hsh| hsh[:x_start]}.sort
puts date_boxes.select{|box| (y_start..(y_start+2)).include?(box[:y_start])}.map{|hsh| hsh[:x_start]}.sort
table_y_start = date_boxes.select{|box| (x_start..(x_start+2)).include?(box[:x_start])}.map{|hsh| hsh[:y_start]}.min
date_boxes.select{|box| (y_start..(y_start+2)).include?(box[:y_start])}.map{|hsh| hsh[:x_start]}.sort
date_boxes.select{|box| (x_start..(x_start+2)).include?(box[:x_start])}.map{|hsh| hsh[:y_start]}.sort
table_x_end
table_y_end
table_x_end = date_boxes.select{|box| (y_start..(y_start+2)).include?(box[:y_start])}.map{|hsh| hsh[:x_end]}.max
table_x_start = date_boxes.select{|box| (y_start..(y_start+2)).include?(box[:y_start])}.map{|hsh| hsh[:x_start]}.min
table_y_end = date_boxes.select{|box| (x_start..(x_start+2)).include?(box[:x_start])}.map{|hsh| hsh[:y_end]}.max
table_y_start = date_boxes.select{|box| (x_start..(x_start+2)).include?(box[:x_start])}.map{|hsh| hsh[:y_start]}.min
date_boxes.select{|box| (x_start..(x_start+2)).include?(box[:x_start])}.map{|hsh| hsh[:y_start]}.min
y_start, count = find_line_marker(date_boxes, :y_start)
x_start, count = find_line_marker(date_boxes, :x_start)
exit
y_start, count = find_line_marker(date_boxes, :y_start)
x_start, count = find_line_marker(date_boxes, :x_start)
exit
y_start, count = find_line_marker(date_boxes, :y_start)
x_start, count = find_line_marker(date_boxes, :x_start)
exit
y_start, count = find_line_marker(date_boxes, :y_start)
date_boxes
boxes
x_start, count = find_line_marker(date_boxes, :x_start)
date_boxes
exit
y_start, count = find_line_marker(date_boxes, :y_start)
x_start, count = find_line_marker(date_boxes, :x_start)
exit
x_line
x_line, count = find_line_marker(lines)
lines = grouped_date_boxes.map {|k,v| {x_start: k, count: v.count}}
grouped_date_boxes.first
date_boxes.first
find_line_marker(date_boxes, :x_start)
date_boxes
exit
find_line_marker(master_list)
exit
master_list.select{|hsh| (x_start..(x_start+2)).include?(hsh[:x_start]) }
(x_start..(x_start+2)).to_a.count
[1..3].methods
1..3.to_arr
[1..3].count
(x_start..(x_start+2)).to_a.count
[x_start, x_start +1 ].count
x_start
master_list
master_list.select{|hsh| (x_start..(x_start+2)).include?(hsh[:x_start]) }
x_start = marker[:x_start]
marker
maker
exit
continue
exit
list.shift{|hsh| hsh[:x_start] == (current_x_start + 1) }
puts list
list
exit
list.pluck
puts list
list
list.select!{|hsh| hsh[:x_start] == (current_x_start + 1) }
continue
exit
list.reject!{|hsh| hsh[:x_start] == (current_x_start + 1) }
puts list
list
current_x_start
continue
current_x_start
continue
current_x_start
exit
current_x_start
next_line
exit
{x_start: 1033, count: 1},
{x_start: 1285, count: 1},
{x_start: 978, count: 1},
{x_start: 979, count: 2},
{x_start: 1276, count: 2},
{x_start: 1282, count: 1},
{x_start: 1275, count: 3},
{x_start: 977, count: 1},
{x_start: 387, count: 1},
{x_start: 385, count: 1},
{x_start: 691, count: 1},
{x_start: 391, count: 1},
{x_start: 384, count: 3},
{x_start: 89, count: 1},
{x_start: 682, count: 2},
{x_start: 529, count: 1},
list = [{x_start: 681, count: 2},
{x_start: 1033, count: 1},
{x_start: 1285, count: 1},
{x_start: 978, count: 1},
{x_start: 979, count: 2},
{x_start: 1276, count: 2},
{x_start: 1282, count: 1},
{x_start: 1275, count: 3},
{x_start: 977, count: 1},
{x_start: 387, count: 1},
{x_start: 385, count: 1},
{x_start: 691, count: 1},
{x_start: 391, count: 1},
{x_start: 384, count: 3},
{x_start: 89, count: 1},
{x_start: 682, count: 2},
{x_start: 529, count: 1},
list = [{x_start: 681, count: 2},
exit
contine
continue
exit
grouped_date_boxes.each {|k,v| puts "y_start: #{k}, count: #{v.count}"}
grouped_date_boxes.each do |k,v|grouped_date_boxes.each {|k,v| puts "y_start: #{k}, count: #{v.count}"}
end
  puts "y_start: #{k}, count: #{v.count}"
grouped_date_boxes.each do |k,v|
grouped_date_boxes = date_boxes.group_by {|hsh| hsh[:y_start]}
end
  puts "y_start: #{k}, count: #{v.count}"
grouped_date_boxes.keysgrouped_date_boxes.each do |k,v|
grouped_date_boxes = date_boxes.group_by {|hsh| hsh[:y_start]}
date_boxes
data_boxes
puts boxed.select {|hsh| hsh[:word].match(/^[0-9]{1,2}$/)}
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 60; x_end = 961; y_start = 900; y_end = 1109
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 60; x_end = 961; y_start = 900; y_end = 1109
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 600; x_end = 961; y_start = 900; y_end = 1109
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 750; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 650; x_end = 961; y_start = 730; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 650; x_end = 961; y_start = 730; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 660; x_end = 961; y_start = 735; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 735; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 748; y_end = 929
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 750; y_end = 929
exit
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 563; y_end = 745
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 563; y_end = 750
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 563; y_end = 742
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 194; y_end = 373
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 194; y_end = 374
puts boxed.select {|hsh| hsh[:x_start] >= x_start and hsh[:x_end] <= x_end  and hsh[:y_start] >= y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 379; y_end = 557
puts boxed.select {|hsh| hsh[:x_start] => x_start and hsh[:x_end] <= x_end  and hsh[:y_start] => y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 379; y_end = 557
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 379; y_end = 557
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 194; y_end = 374
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 375; y_end = 560x_start = 675; x_end = 961; y_start = 375; y_end = 557
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 375; y_end = 560x_start = 675; x_end = 961; y_start = 375; y_end = 557
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 375; y_end = 560
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 194; y_end = 374
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 675; x_end = 961; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 680; x_end = 961; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 680; x_end = 961; y_start = 194; y_end = 374
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] <= x_end  and hsh[:y_start] > y_start and hsh[:y_end] <= y_end }
x_start = 680; x_end = 962; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 975; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 961; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 960; y_start = 375; y_end = 555
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 960; y_start = 194; y_end = 374
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 960; y_start = 194; y_end = 380
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 959; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 958; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 955; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 960; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 950; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 940; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 930; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_end] < x_end  and hsh[:y_start] > y_start and hsh[:y_end] < y_end }
x_start = 680; x_end = 930; y_start = 351; y_end = 508
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_start] < x_end  and hsh[:y_start] > y_start and hsh[:y_start] < y_end }
x_start = 680; x_end = 930; y_start = 351; y_end = 508
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_start] < x_end  and hsh[:y_start] > y_start and hsh[:y_start] < y_end }
x_start = 680; x_end = 930; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_start] < x_end  and hsh[:y_start] > y_start and hsh[:y_start] < y_end }
x_start = 680; x_end = 945; y_start = 194; y_end = 351
puts boxed.select {|hsh| hsh[:x_start] > x_start and hsh[:x_start] < x_end  and hsh[:y_start] > y_start and hsh[:y_start] < y_end }
x_start = 680; x_end = 950; y_start = 194; y_end = 351
exit
puts date_boxes = boxed.select {|hsh| hsh[:word].match(/^[0-9]{1,2}$/)}
pp boxed
boxed
obj.words
obj
